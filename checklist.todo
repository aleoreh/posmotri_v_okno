Отображение в браузере

    Проект визуально соответствует макету:

        ✔ есть все секции, блоки и элементы макета, и они корректно отображаются в Firefox, Google Chrome или Yandex Browse, @done(23-10-06 09:13)
        ✔ отличие не более 10% при проверке системой скриншот-проверки автотестов, @done(23-10-06 09:13)
        ✔ отличие не более 5px по вертикали и 3px по горизонтали при проверке ревьюером. @done(23-10-06 09:13)
        ✔ Рекомендуем пользоваться плагином Pixel Perfect для доводки вёрстки. @done(23-10-06 09:13)
    ✔ Сетка макета не сбита: например, при сжатии страницы сохраняется расположение элементов относительно друг друга на странице, содержимое не выпадает за пределы своего блока, никакие блоки не наезжают друг на друга. @done(23-10-06 09:14)
    ✔ Страница не прокручивается по горизонтали и не появляется других лишних полос прокрутки при ширине экрана, которая больше или равна минимально допустимой (согласно рекомендациям к проекту). @done(23-10-06 09:14)
    ✔ Свёрстаны все состояния элементов страницы описанные в рекомендациях и макете. @done(23-10-06 10:34)

Соблюдены рекомендации к текущему проекту

    Вёрстка проекта не вредит функциональности:

        карточки проекта появляются во всех предусмотренных ситуациях,
        работают прелоадеры и заглушки ошибок,
        работает поиск,
        видеоролики подставляются в основной блок по клику.
    Позиционирование absolute в файле style.css применяется только для блока .visually-hidden. Остальной лейаут выполнен с применением гибких раскладок.
    Изображения и видео подогнаны под заданные размеры через object-fit.
    Учтены особенности поведения интерактивных элементов в состояниях :focus и :focus-visible. Например, в состоянии :focus-visible у элементов формы лейбл обводится, а в состоянии :focus — не обводится.
    Состояния выбранных чекбоксов реализованы через псевдоэлементы.
    Все элементы доступны при навигации с клавиатуры, они визуально выделены при работе с ними.
    Подчеркивание у кнопок и чекбоксов появляется при наведении на всю активную зону (включая сам чекбокс), а не только на текст.

CSS

    Аккуратное форматирование кода:

        между селекторами и открывающими скобками стоит пробел,
        каждое правило начинается с новой строки,
        стоят точки с запятой,
        закрывающие скобки вынесены на отдельную строку.
    Соблюдены требования к именованию CSS классов:

        для CSS классов выбраны подходящие по смыслу имена,
        отсутствует слитное написание слов в именах классов,
        единообразное разделение слов в именах CSS-классов во всем проекте, например используется только kebab-case — разделение слов знаком -, или camelCase — разделение слов регистром символов,
        в именах не используется транслитерация и сокращения, которые не являются общеупотребимыми.
        Если в брифе к проекту описаны имена классов, то старайтесь использовать их.
    У body и типовых элементов сбрасываются браузерные отступы.
    Для всех элементов сайта корректно заданы:

        цвета фона,
        размеры,
        межстрочные расстояния,
        межбуквенные расстояния и расстояния между словами при необходимости.
    Корректно используются шрифты:

        разные форматы шрифтов подключаются в правильном порядке — от самых современных к более старым с указанием формата как свойства CSS;
        указаны альтернативные шрифты;
        семейство, вес, начертание и размеры шрифтов во всех элементах страницы соответствуют заданным в макете.
    Правильно организован лейаут страницы:

        для организации лейаута ключевых блоков использован flex или grid;
        корректно отцентрированы необходимые элементы на странице,
        не задана фиксированная высота и ширина элементов там, где их можно не использовать или применено минимальные или максимальные значения. Блок растягивается, если в него вставлено в два-три раза больше текста;
        абсолютное позиционирование используется только там, где нельзя применить статичное или относительное позиционирование;
        контекст позиционирования указан корректно (например, position:relative у нужного элемента);
        корректно задано свойство z-index, нет спрятавшихся элементов;
        нет лишних отступов у первых и последних элементов в списках и блоках с абзацами.
    Нет пустых CSS-правил.
    Нет дублирующихся селекторов.
    Нет дублирующихся свойств внутри CSS-правил.
    Стили одинаковых элементов не дублируются, а переиспользуются.
    Не используются инлайновые стили в HTML.

Хорошие практики
В этом списке собраны приёмы, которые помогут сделать проект ещё лучше. На данном этапе их использовать необязательно — автотесты и ревьюер примут работу без них. Однако такие хорошие практики помогут вам сделать портфолио более профессиональным. Опытные верстальщики обратят на них внимание.

    В разметке нет лишних обёрток <div> у элементов.
    В разметке у ссылок нет пустых атрибутов href.
    У всех изображений задан атрибут alt с описанием на языке страницы.
    Всем изображениям заданы ограничения размеров.
    Элементам не добавлены классы, которые не используются.
    В стилях не указаны неработающие свойства (например, не заданы размеры строчных элементов).
    Для всех элементов на странице переопределено дефолтное значение свойства box-sizing.
    При организации внутренней геометрии блоков внутренние отступы задаются через padding.
    Раскладки flex или grid не применяются без необходимости там, где можно обойтись дефолтным отображением.
    Для задания отступов между элементами использован gap вместо margin.
    Нет чрезмерной стилизации. Например, одинаковые размеры прописаны и для обёртки, и для изображения внутри.
    Интерлиньяж задан в относительных единицах измерения.
    Если в проекте используется методология БЭМ, то нет нарушений соглашения по именованию классов и требований методологии. Например:

        применено единообразное разделение имён блоков, элементов и модификаторов во всем проекте;
        элемент не используется вне своего блока;
        нет элементов элементов;
        класс модификатор не используется без указания блока или элемента, который он модифицирует;
        классы модификаторы описывают только модифицированное значение, остальные описаны в стилях блока;
        внешняя геометрия блоков задана через миксы.
    В элементах формы при необходимости используются inherit или currentColor.
    Для предсказуемого поведения инпутов в разных браузерах использован appearance: none;.
    Вместо overflow: scroll использован overflow: auto, чтобы не отображался ненужный скролл.
    Вид курсора меняется при наведении на интерактивные элементы.
    Для наилучшего позиционирования изображения при задании свойства object-fit задаётся также подходящее значение свойства object-position.
    Для стилизации интерактивных элементов используется outline, а не border (outline не влияет на размеры элемента в потоке).
    CSS-правила в коде расположены в примерном соответствии с позицией элементов в DOM.
    Для стилизации используются только селекторы классов, псевдоэлементов и псевдоклассов, если речь не идёт о сбросе браузерных дефолтных стилей.
    Вместо физических CSS-свойств используются логические CSS-свойства.